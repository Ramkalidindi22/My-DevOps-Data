7.Using Join and Count to Create Multiple S3 Buckets

Find three files as below:-

main.tf :-
---------
provider "aws" {
  region = "${var.aws_region}"
}

resource "random_id" "tf_bucket_id" {
  byte_length = 2
}

resource "aws_s3_bucket" "tf_code" {
    bucket        = "${var.project_name}-${random_id.tf_bucket_id.dec}"
    acl           = "private"

    force_destroy =  true

    tags {
      Name = "tf_bucket"
    }
}


variables.tf:-
--------------
variable "aws_region" {
  default = "us-east-1"
}

variable "project_name" {
  default = "la-terraform"
}


outputs.tf:-
-------------
output "bucketname" {
  value = "${aws_s3_bucket.tf_code.id}"
}



Update the Variables File:-
Edit variables.tf.
Add a new variable number_of_instances.
Set the the default to 2.

Update the Main File:-
Update random_id and add a count.
Set the value count to use the number_of_instances variable.
Update aws_s3_bucket and add a count.
Update random_id.tf_bucket_id.dec so it iterates through the count. Update the Name tag so that tf_bucket is appended with the count index plus one.

Update the Outputs File:-
Update the bucketname output value to use the join function so that it returns a comma delimited list of bucket names.

Deploy the Infrastructure:-
Initialize Terraform.
Validate the files.
Deploy the S3 buckets.

A.
-->main.tf:
provider "aws" {
  region = "${var.aws_region}"
}

resource "random_id" "tf_bucket_id" {
  byte_length = 2
}

resource "aws_s3_bucket" "tf_code" {
    bucket        = "${var.project_name}-${random_id.tf_bucket_id.dec}"
    acl           = "private"

    force_destroy =  true

    tags {
      Name = "tf_bucket"
    }
}


-->variables.tf:-
variable "aws_region" {
  default = "us-east-1"
}

variable "project_name" {
  default = "la-terraform"
}


-->outputs.tf:
output "bucketname" {
  value = "${aws_s3_bucket.tf_code.id}"
}

-->Variable.tf:
variable "aws_access_key" {
    default = ""
}
variable "aws_secret_key" {
    default = ""
}

variable "key_name" {
    default = "MyFirstKey"
}

variable "private_key_path" {
    default = "D:AWS/sh/myfirstkey.pem"
}

variable "aws_region" {
    default = "us-east-1"
}

variable "project_name" {
    default = "la-terraform"
}

variable "number_of_instances" {
    default = 2
}

-->main.tf:

provider "aws" {
    access_key = var.aws_access_key
    secret_key = var.aws_secret_key
    region = var.aws_region
}

resource "random_id" "tf_bucket_id" {
    byte_length =2
    count = var.number_of_instances
}

resource "aws_s3_bucket" "tf_code" {
    bucket = "${var.project_name}-${random_id.tf_bucket_id[count.index]}"
    acl = "private"
    force_destroy = true
    tags = {
        Name = "tf_bucket-${count.index}"
    }
}

-->outputs.tf:
output "bucketname" {
    value = join(",", [aws_s3_bucket.tf_code.id, aws_s3_bucket.tf_code.id])
}

$terraform init
$ terraform  plan -out "terraform_asst7.tfplan"
$ terraform  apply -out "terraform_asst7.tfplan"